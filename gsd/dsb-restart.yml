---
- hosts: clients
  gather_facts: no
  become: no
  any_errors_fatal: false

  tasks:
    - name: Kill tmux session and remove '{{ wkld_container_name }}' container before running
      shell: >
        tmux kill-session -t client_init ;
        sudo docker stop {{ wkld_container_name }} ;
        sudo docker rm {{ wkld_container_name }}
      ignore_errors: True

- hosts: "{{ compose_post_service_instance }}"
  gather_facts: no
  become: no
  any_errors_fatal: true

  tasks:
    - name: Remove dockerize.sync from container
      shell: >
        sudo docker exec $( docker ps -a --filter name='compose-post-service' --filter status=running --format {% raw %}'{{ .ID }}'{% endraw %} ) rm -f /tmp/dockerize.sync
      ignore_errors: True

- hosts: swarm_manager
  any_errors_fatal: true
  gather_facts: no
  become: no

  tasks:
    - name: Scale DSB to 0
      shell: >
        sudo docker service scale $(CMD="" ; for SERVICE in $(docker stack services {{ stack }} --format {% raw %}'{{.Name}}'{% endraw %}) ; do CMD="$CMD $SERVICE=0"; done; echo $CMD)

    - name: Scale DSB to 1
      shell: >
        sudo docker service scale $(CMD="" ; for SERVICE in $(docker stack services {{ stack }} --format {% raw %}'{{.Name}}'{% endraw %}) ; do CMD="$CMD $SERVICE=1"; done; echo $CMD)

- hosts: "{{ compose_post_service_instance }}"
  gather_facts: no
  become: no
  any_errors_fatal: true

  tasks:
    - name: Wait for compose-post-service to be ready for posts by creating dockerize.sync file
      shell: >
        sudo docker exec $( docker ps -a --filter name='compose-post-service' --filter status=running --format {% raw %}'{{ .ID }}'{% endraw %} ) dockerize -wait file:///tmp/ -wait-retry-interval 10s -timeout 300s
      ignore_errors: True