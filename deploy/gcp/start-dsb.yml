---
- hosts: swarm_manager
  gather_facts: no
  become: no
  any_errors_fatal: true
  vars:
    - stack: deathstarbench
    - app: socialNetwork
    - num_services: 40

  tasks:
    - name: Run DSB Stack
      shell: >
          cd /code/{{ app }} ;
          docker stack deploy --compose-file ./docker-compose-swarm.yml {{ stack }}
      register: out
      failed_when: "not(out.rc == 0) or 'fail' in out.stderr"

    - name: Ensure DSB stack is deployed
      # mongodb-setup has to run before DSB stack is deployed
      shell: >
            docker stack services {{ stack }} --format {% raw %}'{{.Name}};{{.Replicas}}'{%endraw%} | grep -v 'post-storage-mongodb-setup' | grep -v 'write-home-timeline-rabbitmq-setup' | grep '1/1' | wc -l
      register: cmd_res
      retries: 15
      delay: 30
      until: (cmd_res.stdout | int) == num_services

- hosts: compose-post.pluribus
  gather_facts: no
  become: yes
  any_errors_fatal: true
  vars:
    - stack: deathstarbench
    - app: socialNetwork

  tasks:
    - name: Wait for compose-post-service to be ready for posts by creating dockerize.sync file
      shell: >
          docker exec $( docker ps -a --filter name='compose-post-service' --filter status=running --format {% raw %}'{{ .ID }}'{% endraw %} ) dockerize -wait file:///tmp/dockerize.sync
      ignore_errors: True