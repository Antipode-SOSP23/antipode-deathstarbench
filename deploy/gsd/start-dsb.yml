---
- hosts: swarm_manager
  gather_facts: no
  become: no
  any_errors_fatal: true
  vars:
    - stack: deathstarbench
    - app: socialNetwork
    - num_services: 38

  tasks:
    - name: Run DSB Stack
      shell: >
            cd /home/jfloff/nas_inesc/antipode/antipode-deathstarbench/{{ app }} ;
            docker stack deploy --compose-file ./docker-compose-swarm.yml {{ stack }};
      register: out
      failed_when: "not(out.rc == 0) or 'fail' in out.stderr"

    - name: Ensure MongoDB setup is finished
      # mongodb-setup has to run before DSB stack is deployed
      shell: >
            docker stack services {{ stack }} --format {% raw %}'{{.Name}};{{.Replicas}}'{%endraw%} | grep 'post-storage-mongodb-setup' | grep '0/1' | wc -l
      register: cmd_res
      # 1 minute
      retries: 6
      delay: 30
      until: (cmd_res.stdout | int) == 1

    - name: Ensure RabbitMQ setup is finished
      # mongodb-setup has to run before DSB stack is deployed
      shell: >
            docker stack services {{ stack }} --format {% raw %}'{{.Name}};{{.Replicas}}'{%endraw%} | grep 'write-home-timeline-rabbitmq-setup' | grep '0/1' | wc -l
      register: cmd_res
      # 1 minute
      retries: 6
      delay: 30
      until: (cmd_res.stdout | int) == 1

    - name: Ensure DSB stack is deployed
      # mongodb-setup has to run before DSB stack is deployed
      shell: >
            docker stack services {{ stack }} --format {% raw %}'{{.Name}};{{.Replicas}}'{%endraw%} | grep -v 'post-storage-mongodb-setup' | grep -v 'write-home-timeline-rabbitmq-setup' | grep '1/1' | wc -l
      register: cmd_res
      # 1 minute
      retries: 6
      delay: 30
      until: (cmd_res.stdout | int) == num_services
