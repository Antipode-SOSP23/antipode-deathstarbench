---
- hosts: swarm_manager
  gather_facts: no
  become: no
  any_errors_fatal: true

  tasks:
    - name: Copy updated docker-compose-swarm
      synchronize:
        src: "{{ deploy_dir }}/docker-compose-swarm.yml"
        dest: /code/app/docker-compose-swarm.yml
        use_ssh_args: yes
        recursive: true
        mode: push

    - name: Run DSB Stack
      shell: >
        docker stack deploy --with-registry-auth --compose-file ./docker-compose-swarm.yml {{ stack }}
      register: out
      failed_when: "not(out.rc == 0) or 'fail' in out.stderr"
      args:
        chdir: '/code/app'
        executable: /bin/bash

    - name: Check number of services running
      # mongodb-setup has to run before DSB stack is deployed
      shell: >
        docker stack services {{ stack }} --format {% raw %}'{{.Name}};{{.Replicas}}'{%endraw%} | grep -v 'post-storage-mongodb-setup' | grep -v 'write-home-timeline-rabbitmq-setup' | grep '1/1' | wc -l
      register: num_deployed_services
      retries: 15
      delay: 45
      until: (num_deployed_services.stdout | int) == num_services

- hosts: "{{ compose_post_service_instance }}"
  gather_facts: no
  become: yes
  any_errors_fatal: true

  tasks:
    - name: Wait for compose-post-service to be ready for posts by creating dockerize.sync file
      shell: >
        docker exec $( docker ps -a --filter name='compose-post-service' --filter status=running --format {% raw %}'{{ .ID }}'{% endraw %} ) dockerize -wait file:///tmp/dockerize.sync -wait-retry-interval 10s -timeout 60s
      retries: 5
      delay: 30